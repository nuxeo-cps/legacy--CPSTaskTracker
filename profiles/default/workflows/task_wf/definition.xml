<?xml version="1.0"?>
<cps-workflow workflow_id="task_wf"
              title="CPS Workflow Definition"
              state_variable="review_state"
              initial_state="waiting"
              meta_type="CPS Workflow">
 <permission>Modify portal content</permission>
 <permission>View</permission>
 <state state_id="closed" title="">
  <exit-transition transition_id="assign"/>
  <exit-transition transition_id="history"/>
  <exit-transition transition_id="reinit"/>
 </state>
 <state state_id="processed" title="">
  <exit-transition transition_id="close"/>
  <exit-transition transition_id="recall"/>
  <exit-transition transition_id="history"/>
  <exit-transition transition_id="reinit"/>
 </state>
 <state state_id="waiting" title="">
  <exit-transition transition_id="accept"/>
  <exit-transition transition_id="close"/>
  <exit-transition transition_id="recall"/>
  <exit-transition transition_id="reject"/>
  <exit-transition transition_id="history"/>
  <exit-transition transition_id="reinit"/>
 </state>
 <transition transition_id="accept" title=""
             new_state="processed" trigger="USER"
             before_script="" after_script="">
  
  <action url="%(content_url)s/cps_task_accept_form"
          category="workflow">_action_accept</action>
  <guard>
   <guard-role>Manager</guard-role>
   <guard-role>Member</guard-role>
   <guard-expression>python:state_change['object'].getContent().isAssigned()</guard-expression>
  </guard>
 </transition>
 <transition transition_id="close" title=""
             new_state="closed" trigger="USER"
             before_script="" after_script="">
  
  <action url="%(content_url)s/cps_task_close_form"
          category="workflow">_action_close_task</action>
  <guard>
   <guard-role>Manager</guard-role>
   <guard-role>Member</guard-role>
   <guard-expression>python:state_change['object'].getContent().isTheAssignedOne()</guard-expression>
  </guard>
 </transition>
 <transition transition_id="create" title="Initial creation"
             new_state="waiting" trigger="USER"
             before_script="" after_script="">
  <description>Intial transition like</description>
  
  
  <guard>
   <guard-role>Manager</guard-role>
   <guard-role>Member</guard-role>
  </guard>
  <transition-behavior behavior_id="initial-create"/>
 </transition>
 <transition transition_id="history" title="" new_state=""
             trigger="USER" before_script="" after_script="">
  
  <action url="%(content_url)s/cps_task_status_history"
          category="workflow">_action_current_status_</action>
  <guard>
   <guard-role>Manager</guard-role>
   <guard-role>Member</guard-role>
  </guard>
 </transition>
 <transition transition_id="recall" title="" new_state=""
             trigger="USER" before_script="" after_script="">
  
  <action url="%(content_url)s/cps_task_recall_assignee_form"
          category="workflow">_action_recall_</action>
  <guard>
   <guard-role>Manager</guard-role>
   <guard-role>Member</guard-role>
   <guard-expression>python:state_change['object'].getContent().isCreator()</guard-expression>
  </guard>
 </transition>
 <transition transition_id="reinit" title=""
             new_state="waiting" trigger="USER"
             before_script="" after_script="">
  
  <action url="%(content_url)s/cps_task_reinit_form"
          category="workflow">_action_reinit_</action>
  <guard>
   <guard-role>Manager</guard-role>
   <guard-role>Member</guard-role>
   <guard-expression>python:state_change['object'].getContent().isCreator()</guard-expression>
  </guard>
 </transition>
 <transition transition_id="reject" title="" new_state=""
             trigger="USER" before_script="" after_script="">
  
  <action url="%(content_url)s/cps_task_reject_form"
          category="workflow">_action_reject</action>
  <guard>
   <guard-role>Manager</guard-role>
   <guard-role>Member</guard-role>
   <guard-expression>python:state_change['object'].getContent().isAssigned()</guard-expression>
  </guard>
 </transition>
 <variable variable_id="action" for_catalog="False"
           for_status="True" update_always="True">
  <description>The last transition</description>
  <default>
   
   <expression>transition/getId|nothing</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="actor" for_catalog="False"
           for_status="True" update_always="True">
  <description>The ID of the user who performed the last transition</description>
  <default>
   
   <expression>user/getId</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="comments" for_catalog="False"
           for_status="True" update_always="True">
  <description>Comments about the last transition</description>
  <default>
   
   <expression>python:state_change.kwargs.get('comment',                       '')</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="dest_container" for_catalog="False"
           for_status="True" update_always="True">
  <description>Destination container for the last     paste/publish</description>
  <default>
   
   <expression>python:state_change.kwargs.get(                       'dest_container', '')</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="review_history" for_catalog="False"
           for_status="False" update_always="False">
  <description>Provides access to workflow history</description>
  <default>
   
   <expression>state_change/getHistory</expression>
  </default>
  <guard>
   <guard-role>Manager</guard-role>
   <guard-role>WorkspaceManager</guard-role>
   <guard-role>WorkspaceMember</guard-role>
   <guard-role>WorkspaceReader</guard-role>
   <guard-role>Member</guard-role>
  </guard>
 </variable>
 <variable variable_id="time" for_catalog="False"
           for_status="True" update_always="True">
  <description>Time of the last transition</description>
  <default>
   
   <expression>state_change/getDateTime</expression>
  </default>
  <guard>
  </guard>
 </variable>
</cps-workflow>
