<html xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      metal:use-macro="here/popup_template/macros/master">

<metal:block fill-slot="script_plus">
  <script language="JavaScript" type="text/javascript"
    tal:content="string: var input_id = '${request/form/input_id}';"/>

<script language="JavaScript" type="text/javascript"><!--

function fill_groups_selected() {

 var i;
 var groups = document.getElementById("groups");
 var groups_selected = document.getElementById("groups_selected");
 var ids = document.getElementById("ids_selected");
 var fulls = document.getElementById("fulls_selected");

 var agt = navigator.userAgent.toLowerCase();
 var is_ie = (agt.indexOf("msie") != -1);

 for (i=0; i < groups.options.length; i++)
 {
    if(groups.options[i].selected == 1) {

      if ( is_ie )
      {
        var op = document.createElement("option");
        op.value = groups.options[i].value;
        op.text = groups.options[i].text;

        if(op.value != 'NoneMember') {
          groups_selected.add(op);
          fulls.value = fulls.value + '$$' + op.text;
          ids.value = ids.value + '$$' +  op.value;
        }
      }
      else
      {
        if(groups.options[i].value != 'NoneMember') {
          groups_selected.options[groups_selected.options.length] = new Option(groups.options[i].text, groups.options[i].value);
          fulls.value = fulls.value + '$$' + groups.options[i].text;
          ids.value = ids.value + '$$' + groups.options[i].value;
        }
      }
    }
  }

 // clean first option if empty
 if(groups_selected.options[0].value == '') {
     groups_selected.options[0] = null;
 }

}

function return_groups() {

  var fulls = opener.document.getElementById(input_id);
  var ids = opener.document.getElementById('hidden_'+input_id);
  var groups = document.getElementById("groups_selected");

  fulls.value = ''

  // for slot_user and not for TinyTable edit
  if(ids) { ids.value = ''}

  for (i=0; i < groups.options.length; i++)
  {
    if(fulls) { fulls.value = fulls.value + groups.options[i].text + '\n';  }
    if(ids) { ids.value = ids.value + groups.options[i].value + '\n'; }
  }

  window.close()
}

function svg_groups() {

 ids_svg = document.getElementById("svg_ids_selected");
 ids = document.getElementById("ids_selected");
 ids_svg.value = ids.value;

 fulls_svg = document.getElementById("svg_fulls_selected");
 fulls = document.getElementById("fulls_selected");
 fulls_svg.value = fulls.value;
}

function clean_groups_selected() {

  ids = document.getElementById("ids_selected");
  fulls = document.getElementById("fulls_selected");
  ids.value = '';
  fulls.value = '';

  var i, theList;
  theList = document.getElementById("groups_selected");


  for (i=0; i<theList.options.length; i++)
  {
    if (theList.options[i].selected)
    {
        theList.options[i] = null;
        i = 0 // force start loop - refresh table
    }
  }

  if(theList.options.length>0 && theList.options[0].selected) {
     theList.options[0] = null;
  }

  // synchro with double lists
  for (i=0; i<theList.options.length; i++)
  {
    ids.value = ids.value + theList.options[i].value + '$$';
    fulls.value = fulls.value + theList.options[i].text + '$$';
  }

  ids.value = ids.value.substring(0, ids.value.length-2);
  fulls.value = fulls.value.substring(0, fulls.value.length-2); // $$ at the end

}

-->
</script>
</metal:block>

<div metal:fill-slot="header">&nbsp;</div>
<div metal:fill-slot="main"
     tal:define="dtool here/portal_metadirectories;
                 searching request/searching|python:0;
                 search_param request/search_param|string:id_;
                 search_term request/search_term|nothing;
                 directory dtool/groups;
                 groups dtool/groups;
                 button_add string:ajouter;
                 button_clean string:reset;
                 searchable_keys directory/getSearchableSchemaKeys;
                 schema_dict directory/getSchemaDict;
                 searchable_keys python:[key for key in searchable_keys if schema_dict[key].type == 'string'];
                 ids here/REQUEST/form/svg_ids_selected | here/REQUEST/form/ids | nothing;
                 fulls  here/REQUEST/form/svg_fulls_selected | here/REQUEST/form/fulls | nothing;
">

 <h3 tal:content="python:mcat('_searchgroups_tools_')">Edit Groups</h3>

 <form method="post" action="groups_edit_form" onSubmit="svg_groups();return true;">
   <metal:block use-macro="here/main_widgets/macros/form">
     <metal:block fill-slot="content">

       <metal:block use-macro="here/main_widgets/macros/form_property">
         <metal:block fill-slot="title"
           tal:content="python:mcat('_Groups_criteria_')">
           Other E-mails
         </metal:block>

         <metal:block fill-slot="content">
           <select name="search_param">
             <option value="groups" tal:content="python:mcat('_dir_Groups_')">groups</option>
             <option value="."
              tal:repeat="propid searchable_keys"
              tal:attributes="value propid; selected python:propid == search_param"
              tal:content="python:mcat(schema_dict[propid].title)">option1
             </option>
           </select>
         </metal:block>
       </metal:block>

       <metal:block use-macro="here/main_widgets/macros/form_property">
         <metal:block fill-slot="title"
           tal:content="python:mcat('_(Add users ...) as_')">
           Other E-mails
         </metal:block>
         <metal:block fill-slot="content">
           <input type="text" name="search_term" size="10"
              tal:attributes="value python:search_term"/>
         </metal:block>
       </metal:block>

       <metal:block use-macro="here/main_widgets/macros/form_property">
         <metal:block fill-slot="title"
           tal:content="string:">
         </metal:block>
         <metal:block fill-slot="content">
           <input class="mainbutton" type="submit" name="role_submit"
              tal:attributes="value python:mcat('_button_search_')" />
           <input type="hidden" name="searching" value="1" />
           <input type="hidden" name="input_id" tal:attributes="value string:${request/form/input_id}" />
           <input id="svg_ids_selected" type="hidden" name="svg_ids_selected" />
           <input id="svg_fulls_selected" type="hidden" name="svg_fulls_selected"/>
         </metal:block>
       </metal:block>

     </metal:block>
   </metal:block>
 </form>

 <hr />

 <table>
   <tr>
    <td valign="top">
      <h3 tal:content="python:mcat('_select_groups_from_search_')">Edit Groups</h3>
      <table tal:condition="python:not search_param=='groups'"
          tal:define="found python:search_param and directory.searchEntry(**{search_param: search_term});">
        <tr tal:condition="found">
          <form name="edit" tal:condition="found" onsubmit="javascript:fill_groups_selected(); return false;">
            <td>
              <select name="groups" id="groups" multiple=multiple size="10">
                <option tal:repeat="props found"
                   tal:attributes="value python:props[directory.entry_prop]" selected
                   tal:content="python:props[directory.display_prop]">Username
                </option>
              </select>
            </td>
            <td>
              <input type="submit" tal:attributes="value python:mcat('_button_add_') + ' >>'" />
           </td>
           </form>
        </tr>
        <tr tal:condition="python:not found" tal:content="python:mcat('_No_entry_matches_your_request_')"></tr>
      </table>
      <table tal:condition="python:search_param=='groups'"
           tal:define="found python: groups.searchEntry(id_=search_term)">
         <tr tal:condition="found">
          <form name="edit" tal:condition="found" onsubmit="javascript:fill_groups_selected(); return false;">
            <td>
             <select name="groups" id="groups" multiple=multiple size="10">
               <tal:block tal:repeat="props found" tal:omit-tag="">
                 <option tal:attributes="value python:props[groups.display_prop]"
                         tal:content="python:props[groups.display_prop]">Username
                 </option>
               </tal:block>
             </select>
            </td>
            <td>
               <input type="submit" tal:attributes="value python:mcat('_button_add_') + ' >>'" />
            </td>
          </form>
        </tr>
        <tr tal:condition="python:not found" tal:content="python:mcat('_No_entry_matches_your_request_')"></tr>
      </table>
    </td>
    <td with="200px"></td>
    <td valign="top">
       <h3 tal:content="python:mcat('_groups_selected_')">Edit Groups</h3>
       <table>
         <tr>
           <form name="edit" onsubmit="javascript:return_groups()">
             <td>
               <select multiple="1" id="groups_selected" size="10"
                       tal:define="ids_list python:ids.split('$$');
                                   fulls_list python:fulls.split('$$');
                                   index python:range(0,len(ids_list))">
                 <option tal:repeat="i index"
                         tal:attributes="value python:ids_list[i];"
                         tal:content=" python:fulls_list[i]">
                 </option>
               </select>
               <input type="hidden" name="ids_selected" id="ids_selected" cols="24" rows="9" tal:attributes="value ids" >
               <input type="hidden" name="fulls_selected" id="fulls_selected"  tal:attributes="value fulls" />
               <br />
               <input type="button" onClick="javascript:clean_groups_selected()"
                 tal:attributes="value python:mcat('_button_clean_')" />
               <input type="button" onClick="window.close()"
                 tal:attributes="value python:mcat('_button_close_')" />
               <input type="submit" tal:attributes="value python:mcat('_button_validate_')" />
            </td>
           </form>
         </tr>
       </table>
     </td>
   </tr>
 </table>

</div>
</html>
